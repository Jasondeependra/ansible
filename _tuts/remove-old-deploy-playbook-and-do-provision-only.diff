diff --git a/ansible/includes/symfony-bootstrap.yml b/ansible/includes/symfony-bootstrap.yml
deleted file mode 100644
index f5ddda9b..00000000
--- a/ansible/includes/symfony-bootstrap.yml
+++ /dev/null
@@ -1,65 +0,0 @@
----
-- name: Install Composer's dependencies
-  composer:
-    working_dir: "{{ symfony_root_dir }}"
-    no_dev: "{{ 'yes' if ('prod' == symfony_env) else 'no' }}"
-  tags:
-    - deploy
-  when: code_changed
-
-- name: Fix var directory permissions
-  file:
-    path: "{{ symfony_var_dir }}"
-    state: directory
-    mode: 0777
-    recurse: yes
-  changed_when: false
-  tags:
-    - permissions
-    - deploy
-
-- name: Set Symfony secret in parameters.yml
-  lineinfile:
-    dest: "{{ symfony_root_dir }}/app/config/parameters.yml"
-    regexp: "^    secret:"
-    line: "    secret: {{ symfony_secret }}"
-  tags:
-    - deploy
-
-- name: Set Loggly token in parameters.yml
-  lineinfile:
-    dest: "{{ symfony_root_dir }}/app/config/parameters.yml"
-    regexp: "^    loggly_token:"
-    line: "    loggly_token: {{ loggly_token }}"
-  tags:
-    - deploy
-
-# Symfony console commands
-- name: Create DB if not exists
-  command: '{{ symfony_console_path }} doctrine:database:create --if-not-exists'
-  register: db_create_result
-  changed_when: "not db_create_result.stdout|search('already exists. Skipped')"
-  tags:
-    - deploy
-
-- name: Execute migrations
-  command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'
-  register: db_migrations_result
-  changed_when: "not db_migrations_result.stdout|search('No migrations to execute')"
-  tags:
-    - deploy
-  when: code_changed
-
-- name: Load data fixtures
-  command: '{{ symfony_console_path }} hautelook_alice:doctrine:fixtures:load --no-interaction'
-  when: symfony_env != "prod"
-  changed_when: false
-  tags:
-    - deploy
-
-- name: Clear cache
-  command: '{{ symfony_console_path }} cache:clear --env={{ symfony_env }}'
-  changed_when: false
-  tags:
-    - deploy
-  when: code_changed
diff --git a/ansible/playbook.yml b/ansible/playbook.yml
index 769a0957..85684efb 100644
--- a/ansible/playbook.yml
+++ b/ansible/playbook.yml
@@ -5,26 +5,12 @@
     - ./vars/vault.yml
     - ./vars/vars.yml
 
-  vars_prompt:
-    - name: symfony_env
-      prompt: "Enter the environment for your Symfony app (prod|dev|test)"
-      default: prod
-      private: no
-
-  environment:
-    SYMFONY_ENV: "{{ symfony_env|lower }}"
-
   pre_tasks:
-    - name: Convert entered Symfony environment to lowercase
-      set_fact:
-        symfony_env: "{{ symfony_env|lower }}"
-      tags:
-        - always
-
     - name: Update APT package manager repositories cache
       become: true
       apt:
         update_cache: yes
+        cache_valid_time: 3600
 
     - name: Install aptitude
       become: true
@@ -103,69 +89,32 @@
         line: "date.timezone = UTC"
       notify: Restart PHP-FPM
 
-    - name: Create project directory and set its permissions
-      become: true
-      file:
-        path: "{{ symfony_root_dir }}"
-        state: directory
-        owner: "{{ ansible_user }}"
-        group: "{{ ansible_user }}"
-        recurse: yes
-      tags:
-        - deploy
-
-    - name: Checkout Git repository
-      git:
-        repo: https://github.com/knpuniversity/ansible.git
-        dest: "{{ symfony_root_dir }}"
-        force: yes
-      register: repo_code
-      tags:
-        - deploy
-
-    - name: Register code_changed variable
-      set_fact:
-        code_changed: repo_code.changed
-
     - name: Check for Composer
       stat:
         path: /usr/local/bin/composer
       register: composer_stat
-      tags:
-        - deploy
 
     - name: Download Composer
       script: scripts/install_composer.sh
       when: not composer_stat.stat.exists
-      tags:
-        - deploy
 
     - name: Move Composer globally
       become: true
       command: mv composer.phar /usr/local/bin/composer
       when: not composer_stat.stat.exists
-      tags:
-        - deploy
 
     - name: Set permissions on Composer
       become: true
       file:
         path: /usr/local/bin/composer
         mode: "a+x"
-      tags:
-        - deploy
 
     - name: Make sure composer is at its latest version
       composer:
-        working_dir: "{{ symfony_root_dir }}"
+        working_dir: "/home/{{ ansible_user }}"
         command: self-update
       register: composer_self_update
       changed_when: "not composer_self_update.stdout|search('You are already using composer version')"
-      tags:
-        - deploy
-
-    # Bootstrap Symfony app
-    - include: ./includes/symfony-bootstrap.yml
 
   handlers:
     - name: Restart PHP-FPM
diff --git a/ansible/roles/nginx/templates/symfony.conf b/ansible/roles/nginx/templates/symfony.conf
index abc2ae3e..ece2a874 100644
--- a/ansible/roles/nginx/templates/symfony.conf
+++ b/ansible/roles/nginx/templates/symfony.conf
@@ -1,6 +1,6 @@
 server {
     server_name {{ server_name }};
-    root {{ symfony_web_dir }};
+    root {{ server_document_root }};
 
     location / {
         # try to serve file directly, fallback to app.php
diff --git a/ansible/templates/symfony.conf b/ansible/templates/symfony.conf
deleted file mode 100644
index abc2ae3e..00000000
--- a/ansible/templates/symfony.conf
+++ /dev/null
@@ -1,54 +0,0 @@
-server {
-    server_name {{ server_name }};
-    root {{ symfony_web_dir }};
-
-    location / {
-        # try to serve file directly, fallback to app.php
-        try_files $uri /app.php$is_args$args;
-    }
-    # DEV
-    # This rule should only be placed on your development environment
-    # In production, don't include this and don't deploy app_dev.php or config.php
-    location ~ ^/(app_dev|config)\.php(/|$) {
-        fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
-        fastcgi_split_path_info ^(.+\.php)(/.*)$;
-        include fastcgi_params;
-        # When you are using symlinks to link the document root to the
-        # current version of your application, you should pass the real
-        # application path instead of the path to the symlink to PHP
-        # FPM.
-        # Otherwise, PHP's OPcache may not properly detect changes to
-        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
-        # for more information).
-        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
-        fastcgi_param DOCUMENT_ROOT $realpath_root;
-    }
-    # PROD
-    location ~ ^/app\.php(/|$) {
-        fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
-        fastcgi_split_path_info ^(.+\.php)(/.*)$;
-        include fastcgi_params;
-        # When you are using symlinks to link the document root to the
-        # current version of your application, you should pass the real
-        # application path instead of the path to the symlink to PHP
-        # FPM.
-        # Otherwise, PHP's OPcache may not properly detect changes to
-        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
-        # for more information).
-        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
-        fastcgi_param DOCUMENT_ROOT $realpath_root;
-        # Prevents URIs that include the front controller. This will 404:
-        # http://domain.tld/app.php/some-path
-        # Remove the internal directive to allow URIs like this
-        internal;
-    }
-
-    # return 404 for all other php files not matching the front controller
-    # this prevents access to other php files you don't want to be accessible.
-    location ~ \.php$ {
-      return 404;
-    }
-
-    error_log /var/log/nginx/{{ server_name }}_error.log;
-    access_log /var/log/nginx/{{ server_name }}_access.log;
-}
diff --git a/ansible/vars/vars.yml b/ansible/vars/vars.yml
index d8faf678..e67e1be5 100644
--- a/ansible/vars/vars.yml
+++ b/ansible/vars/vars.yml
@@ -1,9 +1,7 @@
 ---
-symfony_root_dir: /var/www/project
-symfony_web_dir: "{{ symfony_root_dir }}/web"
-symfony_var_dir: "{{ symfony_root_dir }}/var"
-symfony_console_path: "{{ symfony_root_dir }}/bin/console"
 symfony_secret: "{{ vault_symfony_secret }}"
 loggly_token: "{{ vault_loggly_token }}"
 aws_access_key: "{{ vault_aws_access_key }}"
 aws_secret_key: "{{ vault_aws_secret_key }}"
+project_deploy_dir: /var/www/project
+server_document_root: /var/www/project/web
