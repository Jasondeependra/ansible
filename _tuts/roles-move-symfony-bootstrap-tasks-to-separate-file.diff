diff --git a/ansible/includes/symfony-bootstrap.yml b/ansible/includes/symfony-bootstrap.yml
new file mode 100644
index 00000000..b575b769
--- /dev/null
+++ b/ansible/includes/symfony-bootstrap.yml
@@ -0,0 +1,49 @@
+---
+- name: Install Composer's dependencies
+  composer:
+    working_dir: "{{ symfony_root_dir }}"
+    no_dev: "{{ 'yes' if ('prod' == symfony_env) else 'no' }}"
+  tags:
+    - deploy
+  when: code_changed
+
+- name: Fix var directory permissions
+  file:
+    path: "{{ symfony_var_dir }}"
+    state: directory
+    mode: 0777
+    recurse: yes
+  changed_when: false
+  tags:
+    - permissions
+    - deploy
+
+# Symfony console commands
+- name: Create DB if not exists
+  command: '{{ symfony_console_path }} doctrine:database:create --if-not-exists'
+  register: db_create_result
+  changed_when: "not db_create_result.stdout|search('already exists. Skipped')"
+  tags:
+    - deploy
+
+- name: Execute migrations
+  command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'
+  register: db_migrations_result
+  changed_when: "not db_migrations_result.stdout|search('No migrations to execute')"
+  tags:
+    - deploy
+  when: code_changed
+
+- name: Load data fixtures
+  command: '{{ symfony_console_path }} hautelook_alice:doctrine:fixtures:load --no-interaction'
+  when: symfony_env != "prod"
+  changed_when: false
+  tags:
+    - deploy
+
+- name: Clear cache
+  command: '{{ symfony_console_path }} cache:clear --env={{ symfony_env }}'
+  changed_when: false
+  tags:
+    - deploy
+  when: code_changed
diff --git a/ansible/playbook.yml b/ansible/playbook.yml
index 7e194108..904d6ded 100644
--- a/ansible/playbook.yml
+++ b/ansible/playbook.yml
@@ -186,54 +186,8 @@
       tags:
         - deploy
 
-    - name: Install Composer's dependencies
-      composer:
-        working_dir: "{{ symfony_root_dir }}"
-        no_dev: "{{ 'yes' if ('prod' == symfony_env) else 'no' }}"
-      tags:
-        - deploy
-      when: code_changed
-
-    - name: Fix var directory permissions
-      file:
-        path: "{{ symfony_var_dir }}"
-        state: directory
-        mode: 0777
-        recurse: yes
-      changed_when: false
-      tags:
-        - permissions
-        - deploy
-
-    # Symfony console commands
-    - name: Create DB if not exists
-      command: '{{ symfony_console_path }} doctrine:database:create --if-not-exists'
-      register: db_create_result
-      changed_when: "not db_create_result.stdout|search('already exists. Skipped')"
-      tags:
-        - deploy
-
-    - name: Execute migrations
-      command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'
-      register: db_migrations_result
-      changed_when: "not db_migrations_result.stdout|search('No migrations to execute')"
-      tags:
-        - deploy
-      when: code_changed
-
-    - name: Load data fixtures
-      command: '{{ symfony_console_path }} hautelook_alice:doctrine:fixtures:load --no-interaction'
-      when: symfony_env != "prod"
-      changed_when: false
-      tags:
-        - deploy
-
-    - name: Clear cache
-      command: '{{ symfony_console_path }} cache:clear --env={{ symfony_env }}'
-      changed_when: false
-      tags:
-        - deploy
-      when: code_changed
+    # Bootstrap Symfony app
+    - include: ./includes/symfony-bootstrap.yml
 
   handlers:
     - name: Restart Nginx
